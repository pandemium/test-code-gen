/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Menu as PrismaMenu } from "@prisma/client";

export class MenuServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MenuCountArgs, "select">): Promise<number> {
    return this.prisma.menu.count(args);
  }

  async menus<T extends Prisma.MenuFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MenuFindManyArgs>
  ): Promise<PrismaMenu[]> {
    return this.prisma.menu.findMany<Prisma.MenuFindManyArgs>(args);
  }
  async menu<T extends Prisma.MenuFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MenuFindUniqueArgs>
  ): Promise<PrismaMenu | null> {
    return this.prisma.menu.findUnique(args);
  }
  async createMenu<T extends Prisma.MenuCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MenuCreateArgs>
  ): Promise<PrismaMenu> {
    return this.prisma.menu.create<T>(args);
  }
  async updateMenu<T extends Prisma.MenuUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MenuUpdateArgs>
  ): Promise<PrismaMenu> {
    return this.prisma.menu.update<T>(args);
  }
  async deleteMenu<T extends Prisma.MenuDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MenuDeleteArgs>
  ): Promise<PrismaMenu> {
    return this.prisma.menu.delete(args);
  }
}
